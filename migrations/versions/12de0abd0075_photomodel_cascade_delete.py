"""photomodel_cascade_delete

Revision ID: 12de0abd0075
Revises: a9cee740f5d3
Create Date: 2024-02-24 23:06:19.389197

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '12de0abd0075'
down_revision: Union[str, None] = 'a9cee740f5d3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('comments_photo_id_fkey', 'comments', type_='foreignkey')
    op.create_foreign_key(
        "comments_photo_id_fkey",
        "comments",
        "photos",
        ["photo_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.alter_column('photos_tags', 'photo_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('photos_tags', 'tag_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('photos_tags', 'id')
    op.drop_column('photos_tags', 'updated_at')
    op.drop_column('photos_tags', 'created_at')
    op.drop_constraint('ratings_photo_id_fkey', 'ratings', type_='foreignkey')
    op.create_foreign_key(
        "ratings_photo_id_fkey",
        "ratings",
        "photos",
        ["photo_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_unique_constraint('tags_name_key', 'tags', ['name'])
    op.drop_constraint('transformed_images_photo_id_fkey', 'transformed_images', type_='foreignkey')
    op.create_foreign_key(
        "transformed_images_photo_id_fkey",
        "transformed_images",
        "photos",
        ["photo_id"],
        ["id"],
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "transformed_images_photo_id_fkey", "transformed_images", type_="foreignkey"
    )
    op.create_foreign_key('transformed_images_photo_id_fkey', 'transformed_images', 'photos', ['photo_id'], ['id'])
    op.drop_constraint("tags_name_key", "tags", type_="unique")
    op.drop_constraint("ratings_photo_id_fkey", "ratings", type_="foreignkey")
    op.create_foreign_key('ratings_photo_id_fkey', 'ratings', 'photos', ['photo_id'], ['id'])
    op.add_column('photos_tags', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('photos_tags', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('photos_tags', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.alter_column('photos_tags', 'tag_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('photos_tags', 'photo_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint("comments_photo_id_fkey", "comments", type_="foreignkey")
    op.create_foreign_key('comments_photo_id_fkey', 'comments', 'photos', ['photo_id'], ['id'])
    # ### end Alembic commands ###
